openapi: 3.0.0
info:
  title: Users, Profiles, Organisations, Blogs, Notification, Payment Transactions, Invite, and Activity Log API
  description: API Documentation for Users, Profiles, Organisations, Blogs, Notification, Payment Transactions, Invite, and Activity Log.
  version: 1.0.0

tags:
  - name: user
    description: Operations related to users
  - name: user_profile
    description: Operations related to user profiles
  - name: organisation_profile
    description: Operations related to organisation profiles
  - name: organisation_user
    description: Operations related to organisation
  - name: blog_post
    description: Operations related to blog posts
  - name: blog_comment
    description: Operations related to blog comments
  - name: Notifications
    description: Operations related to notifications
  - name: Payment Transactions
    description: Operations related to payment transactions
  - name: Invites
    description: Operations related to invites
  - name: Activity Logs
    description: Operations related to activity logs
  - name: email_message
    description: Operations related to email messages
servers:
  - url: https://localhost:8000
    description: Main API server
paths:
  /users:
    get:
      summary: Retrieve all users
      tags:
        - user
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Internal server error

    post:
      summary: Create a new user
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input, e.g., missing required fields
        "500":
          description: Internal server error

  /users/{userId}:
    get:
      summary: Retrieve a specific user by ID
      tags:
        - user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "500":
          description: Internal server error

    put:
      summary: Update a user
      tags:
        - user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "204":
          description: User updated successfully
        "400":
          description: Invalid input, e.g., invalid fields provided
        "404":
          description: User not found
        "500":
          description: Internal server error

  /user_profiles:
    get:
      summary: Retrieve all user profiles
      tags:
        - user_profile
      responses:
        "200":
          description: A list of user profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserProfile"
        "500":
          description: Internal server error

    post:
      summary: Create a new user profile
      tags:
        - user_profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileInput"
      responses:
        "201":
          description: User profile created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Invalid input, e.g., missing required fields
        "500":
          description: Internal server error

  /user_profiles/{profileId}:
    get:
      summary: Retrieve a specific user profile by ID
      tags:
        - user_profile
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User profile found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "404":
          description: User profile not found
        "500":
          description: Internal server error

    put:
      summary: Update a user profile
      tags:
        - user_profile
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileInput"
      responses:
        "204":
          description: User profile updated successfully
        "400":
          description: Invalid input, e.g., invalid fields provided
        "404":
          description: User profile not found
        "500":
          description: Internal server error

  /organisation_profiles:
    get:
      summary: Retrieve all organisation profiles
      tags:
        - organisation_profile
      responses:
        "200":
          description: A list of organisation profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationProfile"
        "500":
          description: Internal server error

    post:
      summary: Create a new organisation profile
      tags:
        - organisation_profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganisationProfileInput"
      responses:
        "201":
          description: Organisation profile created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationProfile"
        "400":
          description: Invalid input, e.g., missing required fields
        "500":
          description: Internal server error

  /organisation_profiles/{profileId}:
    get:
      summary: Retrieve a specific organisation profile by ID
      tags:
        - organisation_profile
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Organisation profile found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationProfile"
        "404":
          description: Organisation profile not found
        "500":
          description: Internal server error

    put:
      summary: Update an organisation profile
      tags:
        - organisation_profile
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganisationProfileInput"
      responses:
        "204":
          description: Organisation profile updated successfully
        "400":
          description: Invalid input, e.g., invalid fields provided
        "404":
          description: Organisation profile not found
        "500":
          description: Internal server error

  /organisation_users:
    get:
      summary: Retrieve all organisation users
      tags:
        - organisation_user
      responses:
        "200":
          description: A list of organisation users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganisationUser"
        "500":
          description: Internal server error

    post:
      summary: Add a user to an organisation
      tags:
        - organisation_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganisationUserInput"
      responses:
        "201":
          description: User added to organisation successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationUser"
        "400":
          description: Invalid input, e.g., missing required fields
        "500":
          description: Internal server error

  /organisation_users/{userId}:
    get:
      summary: Retrieve a specific organisation user by ID
      tags:
        - organisation_user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Organisation user found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganisationUser"
        "404":
          description: Organisation user not found
        "500":
          description: Internal server error

    put:
      summary: Update an organisation user
      tags:
        - organisation_user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganisationUserInput"
      responses:
        "204":
          description: Organisation user updated successfully
        "400":
          description: Invalid input, e.g., invalid fields provided
        "404":
          description: Organisation user not found
        "500":
          description: Internal server error

  /blog_posts:
    get:
      summary: Retrieve all blog posts
      tags:
        - blog_post
      responses:
        "200":
          description: A list of blog posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlogPost"
        "500":
          description: Internal server error

    post:
      summary: Create a new blog post
      tags:
        - blog_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogPostInput"
      responses:
        "201":
          description: Blog post created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPost"
        "400":
          description: Invalid input, e.g., missing required fields
        "500":
          description: Internal server error

  /blog_posts/{postId}:
    get:
      summary: Retrieve a specific blog post by ID
      tags:
        - blog_post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Blog post found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogPost"
        "404":
          description: Blog post not found
        "500":
          description: Internal server error

    put:
      summary: Update a blog post
      tags:
        - blog_post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogPostInput"
      responses:
        "204":
          description: Blog post updated successfully
        "400":
          description: Invalid input, e.g., invalid fields provided
        "404":
          description: Blog post not found
        "500":
          description: Internal server error

  /blog_comments:
    get:
      summary: Retrieve all blog comments
      tags:
        - blog_comment
      responses:
        "200":
          description: A list of blog comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlogComment"
        "500":
          description: Internal server error

    post:
      summary: Add a comment to a blog post
      tags:
        - blog_comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogCommentInput"
      responses:
        "201":
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogComment"
        "400":
          description: Invalid input, e.g., missing required fields
        "500":
          description: Internal server error

  /blog_comments/{commentId}:
    get:
      summary: Retrieve a specific blog comment by ID
      tags:
        - blog_comment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Blog comment found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlogComment"
        "404":
          description: Blog comment not found
        "500":
          description: Internal server error

    put:
      summary: Update a blog comment
      tags:
        - blog_comment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BlogCommentInput"
      responses:
        "204":
          description: Blog comment updated successfully
        "400":
          description: Invalid input, e.g., invalid fields provided
        "404":
          description: Blog comment not found
        "500":
          description: Internal server error
  /notifications:
    get:
      summary: Get all notifications
      tags:
        - Notifications
      responses:
        "200":
          description: A list of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notification"
        "500":
          description: Internal Server Error
    post:
      summary: Create a new notification
      tags:
        - Notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses:
        "201":
          description: Notification created
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /notifications/{id}:
    get:
      summary: Get a notification by ID
      tags:
        - Notifications
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Notification ID
      responses:
        "200":
          description: Notification details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
        "404":
          description: Notification not found
        "500":
          description: Internal Server Error
    put:
      summary: Update a notification by ID
      tags:
        - Notifications
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Notification ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notification"
      responses:
        "200":
          description: Notification updated
        "400":
          description: Bad Request
        "404":
          description: Notification not found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      summary: Delete a notification by ID
      tags:
        - Notifications
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Notification ID
      responses:
        "204":
          description: Notification deleted
        "404":
          description: Notification not found
        "500":
          description: Internal Server Error
  /payment_transactions:
    get:
      summary: Get all payment transactions
      tags:
        - Payment Transactions
      responses:
        "200":
          description: A list of payment transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PaymentTransaction"
        "500":
          description: Internal Server Error
    post:
      summary: Create a new payment transaction
      tags:
        - Payment Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentTransaction"
      responses:
        "201":
          description: Payment transaction created
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /payment_transactions/{id}:
    get:
      summary: Get a payment transaction by ID
      tags:
        - Payment Transactions
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Payment Transaction ID
      responses:
        "200":
          description: Payment transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentTransaction"
        "404":
          description: Payment transaction not found
        "500":
          description: Internal Server Error
    put:
      summary: Update a payment transaction by ID
      tags:
        - Payment Transactions
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Payment Transaction ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentTransaction"
      responses:
        "200":
          description: Payment transaction updated
        "400":
          description: Bad Request
        "404":
          description: Payment transaction not found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      summary: Delete a payment transaction by ID
      tags:
        - Payment Transactions
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Payment Transaction ID
      responses:
        "204":
          description: Payment transaction deleted
        "404":
          description: Payment transaction not found
        "500":
          description: Internal Server Error

  /email_messages:
    get:
      summary: Retrieve all email messages
      tags:
        - email_message
      responses:
        "200":
          description: A list of email messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmailMessage"
        "500":
          description: Internal server error

    post:
      summary: Send an email message
      tags:
        - email_message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailMessageInput"
      responses:
        "201":
          description: Email message sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailMessage"
        "400":
          description: Invalid input, e.g., missing required fields
        "500":
          description: Internal server error

  /email_messages/{messageId}:
    get:
      summary: Retrieve a specific email message by ID
      tags:
        - email_message
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Email message found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailMessage"
        "404":
          description: Email message not found
        "500":
          description: Internal server error

  /invites:
    get:
      summary: Get all invites
      tags:
        - Invites
      responses:
        "200":
          description: A list of invites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invite"
        "500":
          description: Internal Server Error
    post:
      summary: Create a new invite
      tags:
        - Invites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invite"
      responses:
        "201":
          description: Invite created
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /invites/{id}:
    get:
      summary: Get an invite by ID
      tags:
        - Invites
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Invite ID
      responses:
        "200":
          description: Invite details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invite"
        "404":
          description: Invite not found
        "500":
          description: Internal Server Error
    put:
      summary: Update an invite by ID
      tags:
        - Invites
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Invite ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Invite"
      responses:
        "200":
          description: Invite updated
        "400":
          description: Bad Request
        "404":
          description: Invite not found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      summary: Delete an invite by ID
      tags:
        - Invites
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Invite ID
      responses:
        "204":
          description: Invite deleted
        "404":
          description: Invite not found
        "500":
          description: Internal Server Error
  /activity_logs:
    get:
      summary: Get all activity logs
      tags:
        - Activity Logs
      responses:
        "200":
          description: A list of activity logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ActivityLog"
        "500":
          description: Internal Server Error
    post:
      summary: Create a new activity log
      tags:
        - Activity Logs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivityLog"
      responses:
        "201":
          description: Activity log created
        "400":
          description: Bad Request
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
  /activity_logs/{id}:
    get:
      summary: Get an activity log by ID
      tags:
        - Activity Logs
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Activity Log ID
      responses:
        "200":
          description: Activity log details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityLog"
        "404":
          description: Activity log not found
        "500":
          description: Internal Server Error
    put:
      summary: Update an activity log by ID
      tags:
        - Activity Logs
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Activity Log ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivityLog"
      responses:
        "200":
          description: Activity log updated
        "400":
          description: Bad Request
        "404":
          description: Activity log not found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
    delete:
      summary: Delete an activity log by ID
      tags:
        - Activity Logs
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Activity Log ID
      responses:
        "204":
          description: Activity log deleted
        "404":
          description: Activity log not found
        "500":
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        is_active:
          type: boolean
        is_admin:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UserInput:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        is_active:
          type: boolean
        is_admin:
          type: boolean

    UserProfile:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        full_name:
          type: string
        avatar_url:
          type: string
        bio:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UserProfileInput:
      type: object
      properties:
        full_name:
          type: string
        avatar_url:
          type: string
        bio:
          type: string

    OrganisationProfile:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        logo_url:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    OrganisationProfileInput:
      type: object
      properties:
        name:
          type: string
        logo_url:
          type: string
        description:
          type: string

    OrganisationUser:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        organisation_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    OrganisationUserInput:
      type: object
      properties:
        user_id:
          type: integer
        organisation_id:
          type: integer

    BlogPost:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        author_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
        is_published:
          type: boolean
        image_url:
          type: string
        slug:
          type: string

    BlogPostInput:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        author_id:
          type: integer
        published_at:
          type: string
          format: date-time
        is_published:
          type: boolean
        image_url:
          type: string
        slug:
          type: string

    BlogComment:
      type: object
      properties:
        id:
          type: integer
        post_id:
          type: integer
        user_id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        is_approved:
          type: boolean

    BlogCommentInput:
      type: object
      properties:
        post_id:
          type: integer
        user_id:
          type: integer
        content:
          type: string
    Notification:
      type: object
      properties:
        id:
          type: integer
        message:
          type: string
        created_at:
          type: string
          format: date-time
    PaymentTransaction:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
          format: float
        status:
          type: string
        created_at:
          type: string
          format: date-time
    EmailMessage:
      type: object
      properties:
        id:
          type: integer
        sender:
          type: string
          format: email
        recipient:
          type: string
          format: email
        subject:
          type: string
        body:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        sent_date:
          type: string
          format: date-time

    EmailMessageInput:
      type: object
      properties:
        sender:
          type: string
          format: email
        recipient:
          type: string
          format: email
        subject:
          type: string
        body:
          type: string
    Invite:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        status:
          type: string
        sent_at:
          type: string
          format: date-time
    ActivityLog:
      type: object
      properties:
        id:
          type: integer
        activity:
          type: string
        timestamp:
          type: string
          format: date-time
